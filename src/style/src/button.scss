@use "./mixins/mixins.scss" as *;
@use "./mixins/utils.scss" as *;
@use "./common/var.scss" as *;
@use "./mixins/button" as *;

@include b(button) {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  margin: 0;
  font-weight: $button-font-weight;
  line-height: 1;
  color: $button-default-font-color;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  background: $button-default-background-color;
  border: $border-base;
  border-color: $button-default-border-color;
  outline: none;
  vertical-align: middle;
  box-sizing: border-box;
  transition: 0.1s;
  appearance: none;
  @include utils-user-select(none);

  & + & {
    margin-left: 10px;
  }

  @include button-size(
    $button-padding-vertical,
    $button-padding-horizontal,
    $button-font-size,
    $button-border-radius
  );

  &:hover,
  &:focus {
    color: $color-primary;
    background-color: $color-primary-light-9;
    border-color: $color-primary-light-7;
  }

  &:active {
    color: mix($color-black, $color-primary, $button-active-shade-percent);
    border-color: mix(
      $color-black,
      $color-primary,
      $button-active-shade-percent
    );
    outline: none;
  }

  &::-moz-focus-inner {
    border: 0;
  }

  & [class*="k-icon-"] {
    & + span {
      margin-left: 5px;
    }
  }

  /* round */
  @include when(round) {
    border-radius: $button-border-radius-round;
  }

  /* circle */
  @include when(circle) {
    padding: $button-padding-vertical;
    border-radius: $button-border-radius-circle;
  }

  /* loading */
  @include when(loading) {
    position: relative;
    pointer-events: none;

    &::before {
      z-index: 1;
      pointer-events: none;
      content: "";
      position: absolute;
      left: -1px;
      top: -1px;
      right: -1px;
      bottom: -1px;
      border-radius: inherit;
      background-color: $color-loading-background-color;
    }
    & [class*="k-icon-"] {
      animation: rotation 2s linear infinite;
    }
  }

  @keyframes rotation {
    from {
      -webkit-transform: rotate(0deg);
    }

    to {
      -webkit-transform: rotate(360deg);
    }
  }

  .rotation {
    transform: rotate(360deg);

    animation: rotation 3s linear infinite;

    -moz-animation: rotation 3s linear infinite;

    -webkit-animation: rotation 3s linear infinite;

    -o-animation: rotation 3s linear infinite;
  }

  /* link */
  @include when(link) {
    background: transparent;
    padding: 2px;
    height: auto;
    border-color: transparent;

    &:hover,
    &:focus {
      color: mix($color-black, $color-white, $button-hover-tint-percent);
      background-color: transparent;
      border-color: transparent;
    }

    &:active {
      color: mix($color-black, $color-white, $button-active-shade-percent);
      background-color: transparent;
      border-color: transparent;
    }

    &.is-disabled,
    &.is-disabled:hover,
    &.is-disabled:focus {
      border-color: transparent;
    }
  }

  /* disabled */
  @include when(disabled) {
    &,
    &:hover,
    &:focus {
      color: $button-disabled-font-color;
      cursor: not-allowed;
      background-image: none;
      border-color: $button-disabled-border-color;
      background-color: $button-disabled-background-color;
    }
  }

  /* size */
  @include m(small) {
    @include button-size(
      $button-small-padding-vertical,
      $button-small-padding-horizontal,
      $button-small-font-size,
      $button-small-border-radius
    );
    @include when(circle) {
      padding: $button-small-padding-vertical;
    }
    & [class*="k-icon-"] {
      font-size: 12px;
    }
  }
  @include m(large) {
    @include button-size(
      $button-large-padding-vertical,
      $button-large-padding-horizontal,
      $button-large-font-size,
      $button-large-border-radius
    );
    @include when(circle) {
      padding: $button-large-padding-vertical;
    }
    & [class*="k-icon-"] {
      font-size: 16px;
    }
  }

  /* type */
  @include m(primary) {
    @include button-variant(
      $button-primary-font-color,
      $button-primary-background-color,
      $button-primary-border-color
    );
    @include when(link) {
      color: $button-primary-border-color;
      &:hover,
      &:focus {
        color: mix($color-primary, $color-white, $button-hover-tint-percent);
      }
      &:active {
        color: mix($color-primary, $color-white, $button-active-shade-percent);
      }
    }
  }
  @include m(success) {
    @include button-variant(
      $button-success-font-color,
      $button-success-background-color,
      $button-success-border-color
    );
    @include when(link) {
      color: $button-success-border-color;
      &:hover,
      &:focus {
        color: mix($color-success, $color-white, $button-hover-tint-percent);
      }
      &:active {
        color: mix($color-success, $color-white, $button-active-shade-percent);
      }
    }
  }
  @include m(info) {
    @include button-variant(
      $button-info-font-color,
      $button-info-background-color,
      $button-info-border-color
    );
    @include when(link) {
      color: $button-info-border-color;
      &:hover,
      &:focus {
        color: mix($color-info, $color-white, $button-hover-tint-percent);
      }
      &:active {
        color: mix($color-info, $color-white, $button-active-shade-percent);
      }
    }
  }
  @include m(danger) {
    @include button-variant(
      $button-danger-font-color,
      $button-danger-background-color,
      $button-danger-border-color
    );
    @include when(link) {
      color: $button-danger-border-color;
      &:hover,
      &:focus {
        color: mix($color-danger, $color-white, $button-hover-tint-percent);
      }
      &:active {
        color: mix($color-danger, $color-white, $button-active-shade-percent);
      }
    }
  }
  @include m(warning) {
    @include button-variant(
      $button-warning-font-color,
      $button-warning-background-color,
      $button-warning-border-color
    );
    @include when(link) {
      color: $button-warning-border-color;
      &:hover,
      &:focus {
        color: mix($color-warning, $color-white, $button-hover-tint-percent);
      }
      &:active {
        color: mix($color-warning, $color-white, $button-active-shade-percent);
      }
    }
  }
}
